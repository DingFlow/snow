<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snow.system.mapper.SysUserMapper">

	<resultMap type="SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="loginName"    column="login_name"   />
		<result property="userName"     column="user_name"    />
		<result property="userType"     column="user_type"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="salt"         column="salt"         />
		<result property="status"       column="status"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<result property="isSenior"       column="is_senior"       />
		<result property="jobnumber"       column="job_number"       />
		<result property="workPlace"       column="work_place"       />
		<result property="tel"       column="tel"       />
		<result property="hiredDate"       column="hired_date"       />
		<result property="orgEmail"       column="org_email"       />
		<result property="dingUserId"       column="ding_user_id"       />
		<result property="pwdUpdateDate" column="pwd_update_date" />

		<association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
	</resultMap>

	<resultMap id="deptResult" type="SysDept">
		<id     property="deptId"   column="dept_id"     />
		<result property="parentId" column="parent_id"   />
		<result property="deptName" column="dept_name"   />
		<result property="orderNum" column="order_num"   />
		<result property="leader"   column="leader"  typeHandler="com.snow.system.handler.JsonStringListTypeHandler"     />
		<result property="status"   column="dept_status" />
	</resultMap>
	
	<resultMap id="RoleResult" type="SysRole">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"    column="data_scope"     />
		<result property="status"       column="role_status"    />
	</resultMap>

	<resultMap id="SysAuthUserResult" type="SysAuthUser">
		<id     property="authId"       column="auth_id"        />
		<result property="uuid"         column="uuid"           />
		<result property="userId"       column="user_id"        />
		<result property="loginName"    column="login_name"     />
		<result property="userName"     column="user_name"      />
		<result property="avatar"       column="avatar"         />
		<result property="email"        column="email"          />
		<result property="source"       column="source"         />
		<result property="createTime"   column="create_time"    />
	</resultMap>
	
	<sql id="selectUserVo">
        select  u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.sex, u.password, u.salt, u.status, u.del_flag,
               u.login_ip, u.login_date, u.pwd_update_date, u.create_time, u.remark,u.job_number,u.work_place,u.tel,u.org_email,u.hired_date,
       		    d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,
       		    r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status,
       		    u.ding_user_id
		from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
    </sql>
	
	<select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.password, u.sex, u.salt, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_name, d.leader,u.ding_user_id from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="userType != null and userType != ''">
		    AND u.user_type = #{userType}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (#{deptId},ancestors) ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	<select id="selectUserListByRoleId" parameterType="string" resultMap="SysUserResult">
		select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.status, u.create_time
		from sys_user u
		left join sys_user_role r on r.user_id = u.user_id
		where u.del_flag = '0'

		 and r.role_id = #{roleId}

	</select>


	<select id="selectUserListByRoleIds"  resultMap="SysUserResult">
		select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar,
		 u.phonenumber, u.status, u.create_time
		from sys_user u
		left join sys_user_role r on r.user_id = u.user_id
		where u.del_flag = '0'
		<if test="roleIds!=null and roleIds.size()>0">
			and r.role_id in
			<foreach collection="roleIds" close=")" open="(" separator="," item="roleId">
				#{roleId}
			</foreach>
		</if>


	</select>
	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.user_type, u.email, u.avatar, u.phonenumber, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="loginName != null and loginName != ''">
			AND u.login_name like concat('%', #{loginName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phonenumber like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUserByLoginName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.login_name = #{userName}
	</select>
	
	<select id="selectUserByPhoneNumber" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.phonenumber = #{phonenumber}
	</select>
	
	<select id="selectUserByEmail" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.email = #{email}
	</select>
	
	<select id="checkLoginNameUnique" parameterType="String" resultType="int">
		select count(1) from sys_user where login_name=#{loginName}
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber=#{phonenumber}
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email=#{email}
	</select>
	
	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>

	<select id="selectUserByIds" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id in
		<foreach collection="array" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</select>

	<select id="selectUserByDingUserId" parameterType="String" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.ding_user_id = #{dingUserId}
	</select>
	
	<delete id="deleteUserById" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>
 	
 	<update id="updateUser" parameterType="SysUser">
 		update sys_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="userType != null and userType != ''">user_type = #{userType},</if>
 			<if test="email != null and email != ''">email = #{email},</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="salt != null and salt != ''">salt = #{salt},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
			<if test="isSenior != null">is_senior = #{isSenior},</if>
			<if test="jobnumber != null">job_number = #{jobnumber},</if>
			<if test="workPlace != null">work_place = #{workPlace},</if>
			<if test="tel != null">tel = #{tel},</if>
			<if test="hiredDate != null">hired_date = #{hiredDate},</if>
			<if test="pwdUpdateDate != null">pwd_update_date = #{pwdUpdateDate},</if>
			<if test="orgEmail != null">org_email = #{orgEmail},</if>
			<if test="dingUserId != null">ding_user_id = #{dingUserId},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>
 	
 	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="loginName != null and loginName != ''">login_name,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="userType != null and userType != ''">user_type,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="salt != null and salt != ''">salt,</if>
 			<if test="status != null and status != ''">status,</if>
		    <if test="pwdUpdateDate != null">pwd_update_date,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
		<if test="isSenior != null">is_senior,</if>
		<if test="jobnumber != null">job_number,</if>
		<if test="workPlace != null and workPlace != ''">work_place ,</if>
		<if test="tel != null">tel ,</if>
		<if test="hiredDate != null">hired_date,</if>
		<if test="orgEmail != null">org_email,</if>
		<if test="dingUserId != null">ding_user_id,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="loginName != null and loginName != ''">#{loginName},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="userType != null and userType != ''">#{userType},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="salt != null and salt != ''">#{salt},</if>
 			<if test="status != null and status != ''">#{status},</if>
		<if test="pwdUpdateDate != null">#{pwdUpdateDate},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
		<if test="isSenior != null ">#{isSenior},</if>
		<if test="jobnumber != null and jobnumber !=''"> #{jobnumber},</if>
		<if test="workPlace != null and workPlace !=''">#{workPlace},</if>
		<if test="tel != null and tel!=''">#{tel},</if>
		<if test="hiredDate != null">#{hiredDate},</if>
		<if test="orgEmail != null and orgEmail !=''"> #{orgEmail},</if>
		<if test="dingUserId != null">#{dingUserId},</if>
 			sysdate()
 		)
	</insert>

	<select id="selectAuthUserListByUserId" parameterType="Long" resultMap="SysAuthUserResult">
		select auth_id, uuid, user_id, login_name, user_name, avatar, email, source, create_time
		from sys_auth_user where user_id = #{userId}
	</select>

	<select id="selectAuthUserByUuid" parameterType="String" resultMap="SysUserResult">
		select b.user_id as user_id, b.login_name as login_name, b.password as password
		from sys_auth_user a left join sys_user b on a.user_id = b.user_id
		where a.uuid = #{uuid} and b.del_flag = '0'
	</select>

	<select id="checkAuthUser" parameterType="SysAuthUser" resultType="int">
		select count(1) from sys_auth_user where user_id=#{userId} and source=#{source} limit 1
	</select>

	<insert id="insertAuthUser" parameterType="SysAuthUser">
		insert into sys_auth_user(
		<if test="uuid != null and uuid != ''">uuid,</if>
		<if test="userId != null and userId != 0">user_id,</if>
		<if test="loginName != null and loginName != ''">login_name,</if>
		<if test="userName != null and userName != ''">user_name,</if>
		<if test="avatar != null and avatar != ''">avatar,</if>
		<if test="email != null and email != ''">email,</if>
		<if test="source != null and source != ''">source,</if>
		create_time
		)values(
		<if test="uuid != null and uuid != ''">#{uuid},</if>
		<if test="userId != null and userId != 0">#{userId},</if>
		<if test="loginName != null and loginName != ''">#{loginName},</if>
		<if test="userName != null and userName != ''">#{userName},</if>
		<if test="avatar != null and avatar != ''">#{avatar},</if>
		<if test="email != null and email != ''">#{email},</if>
		<if test="source != null and source != ''">#{source},</if>
		sysdate()
		)
	</insert>

	<delete id="deleteAuthUser" parameterType="Long">
		delete from sys_auth_user where auth_id = #{authId}
	</delete>

</mapper> 